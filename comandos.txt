#or create a new repository on the command line
echo "# comandos_git" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/kgalarza95/comandos_git.git
git push -u origin main

##para forzar el push
git init
git add README.md
git add .
git commit -m "first commit"
git remote add origin https://github.com/userName/repoName.git
git push --force origin master


#or push an existing repository from the command line
git remote add origin https://github.com/kgalarza95/comandos_git.git
git branch -M main
git push -u origin main

importancia de -u y git push -u origin main  origin nombre de rama de github, master rama local

Cuando tienes mas de un repositorio remoto puedes utilizar el flag -u para configurar uno de ellos como el principal.

Supongamos que tienes un repo en BitBucket (bitbucket), otro en GitHub (origin) y otro en GitLab (gitlab). Para usar GitHub (origin) como principal debes usar git push -u origin <branch>. Las siguientes veces que hagas git push se enviarán a GitHub sin tener que especificarlo, pero para los otros dos sí tendrías que hacerlo.

Por ejemplo: git push bitbucket <branch> o git push gitlab <branch>. Es igual si tienes un solo repositorio y quieres evitar estar escribiendo git push origin <branch> puedes utilizar esta opción y solo hacer git push las siguientes veces.



--error de repositorios con historias diferentes, mal clonado
git pull origin master --allow-unrelated-histories

--ver repositorio remoto
git remote
or 
git remote show
--luego poner el nombre de la rama
git remote show origin


##con usuario y pass
git remote set-url origin https://name:password@github.org/repo.git

## el caso de no querer indicar un usuario y una contraseña simplemente se puede sacar esos datos de la URL, como se muestra a continuación.
git remote set-url origin https://github.org/repo.git


##clonar repositorio pero una rama en concreto
git clone --branch <branchname> <remote-repo-url>
o
git clone -b <branchname> <remote-repo-url>



##descartar cambios locales y solo traer cambios remotos
git reset --hard origin-remoto/mirama

##subir cambios a un segundo repo remoto
git push nombre-remote mirama


## ver ramas remotas
 git branch -r


##cambiar de rama forzadamente
git checkout -f nom_rama

##eliminar rama
git branch -D nom_rama

##guardar cambios en pila para crear una nueva rama y cabiarme a ella
git stash 
#2 git branch nueva_ramaa
#3 git chekcout nueva rama
git stash pop


##subir cambios al remoto
git push -f orgin kgalarza:kgalarza    (mi rama:rama remota)
#git stash list ??

##descargar los cambiso de la rama remota
git fetch origin mi_rama
git reset --hard origin/main


##eliminar una rama  (-d es para eliminar, -D eliminar ignorando los cambios)
git branch -D nom_rama
